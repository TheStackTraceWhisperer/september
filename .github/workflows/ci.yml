name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write  # for jacoco coverage comments
      checks: write        # for test report publishing

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    - name: Build and Test with Docker
      run: |
        # Build the Docker image that contains all dependencies and the correct environment
        docker build -t september-ci .

        # Run the tests inside the container and copy results back
        # This avoids volume mount permission issues
        # Note: Container may exit with failure due to test errors, but files should still be generated
        docker run --name september-test september-ci

        # Create target directory structure and copy test results and artifacts out of the container
        mkdir -p ./target
        docker cp september-test:/workspace/target/. ./target/ || echo "Warning: Could not copy all files from container"

        # Clean up the container
        docker rm september-test

        # Fix permissions on generated files so the GitHub Actions runner can read them
        sudo chown -R runner:runner ./target

        # Debug: List what files were actually copied
        echo "Files copied from container:"
        find ./target -name "*.xml" -path "*/surefire-reports/*" | head -10 || echo "No surefire XML files found"
        find ./target -name "*.xml" -path "*/failsafe-reports/*" | head -10 || echo "No failsafe XML files found"

    - name: Add coverage to PR
      id: jacoco
      uses: madrapps/jacoco-report@v1.6.1
      if: github.event_name == 'pull_request' && always()
      with:
        paths: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 40
        min-coverage-changed-files: 60
        title: 'JaCoCo Coverage Report'
        update-comment: true

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: always()
      with:
        report_paths: 'target/surefire-reports/TEST-*.xml,target/failsafe-reports/TEST-*.xml'
        check_name: 'Test Results'
        fail_on_failure: false
        job_summary: true
        include_passed: true

    # Upload comprehensive test reports and coverage artifacts
    - name: Upload Test Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: |
          target/surefire-reports/
          target/failsafe-reports/
        retention-days: 30

    - name: Upload JaCoCo Coverage Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: |
          target/site/jacoco/
          target/site/jacoco-ut/
          target/site/jacoco-it/
        retention-days: 30

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: september-linux-artifacts
        path: target/september-*.jar
        retention-days: 30

  publish:
    needs: build
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read       # to read repository content
      packages: write      # to publish to GitHub Packages

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github

    - name: Publish to GitHub Packages
      run: mvn -B deploy -DskipTests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: build
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write      # to create releases

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/september-linux-artifacts/*.jar
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
