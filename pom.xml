<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>io.thestacktracewhisperer</groupId>
  <artifactId>september</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <maven.compiler.release>21</maven.compiler.release>

    <!-- LWJGL version -->
    <lwjgl.version>3.3.3</lwjgl.version>

    <!-- Mockito version (inline requires this artifact) -->
    <mockito.version>5.19.0</mockito.version>

    <!-- JUnit Jupiter BOM version -->
    <junit.jupiter.version>5.10.2</junit.jupiter.version>

    <!-- SLF4J version -->
    <slf4j.version>2.0.13</slf4j.version>

    <!-- JaCoCo version -->
    <jacoco.version>0.8.11</jacoco.version>
  </properties>

  <!-- Dependency Management for consistent versions -->
  <dependencies>

    <!-- Core & runtime -->
    <dependency>
      <groupId>org.lwjgl</groupId>
      <artifactId>lwjgl</artifactId>
      <version>${lwjgl.version}</version>
    </dependency>

    <dependency>
      <groupId>org.lwjgl</groupId>
      <artifactId>lwjgl-glfw</artifactId>
      <version>${lwjgl.version}</version>
    </dependency>

    <dependency>
      <groupId>org.lwjgl</groupId>
      <artifactId>lwjgl-opengl</artifactId>
      <version>${lwjgl.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.5.18</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <release>21</release>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
              <!--
                The 'argLine' property is used by the surefire plugin.
                This is the default property name and does not need to be specified
                if you are using the default.
              -->
              <propertyName>argLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>prepare-agent-it</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-it.exec</destFile>
              <propertyName>failsafeArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>report-it</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>merge-reports</id>
            <phase>verify</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco.exec</destFile>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>jacoco-ut.exec</include>
                    <include>jacoco-it.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
            </configuration>
          </execution>
          <execution>
            <id>report-merged</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <!--
            Unit tests: Run all tests that do not follow integration test naming conventions.
          -->
          <!--suppress MavenModelInspection -->
          <argLine>${argLine} -XX:+EnableDynamicAgentLoading</argLine>
          <excludes>
            <exclude>**/*IT.java</exclude>
            <exclude>**/*ITCase.java</exclude>
            <exclude>**/*IntegrationTest.java</exclude>
            <exclude>**/it/**/*Test.java</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <!--
            Integration tests: Run all tests that follow standard integration test naming conventions.
          -->
          <!--suppress MavenModelInspection -->
          <argLine>${failsafeArgLine} -XX:+EnableDynamicAgentLoading</argLine>
          <includes>
            <include>**/*IT.java</include>
            <include>**/*ITCase.java</include>
            <include>**/*IntegrationTest.java</include>
            <include>**/it/**/*Test.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <!--
              Enforce Java version: Ensure the build environment uses Java 21 or newer.
            -->
            <id>enforce-java</id>
            <goals><goal>enforce</goal></goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[21,)</version>
                </requireJavaVersion>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <!--
            Jar manifest enrichment: Add implementation and specification details to the generated JAR's manifest file.
          -->
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
              <Implementation-Version>${project.version}</Implementation-Version>
              <Implementation-Title>${project.artifactId}</Implementation-Title>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <!-- Profiles moved to bottom as requested -->
  <profiles>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <dependencies>

        <dependency>
          <groupId>org.lwjgl</groupId>
          <artifactId>lwjgl</artifactId>
          <version>${lwjgl.version}</version>
          <classifier>natives-windows</classifier>
        </dependency>

        <dependency>
          <groupId>org.lwjgl</groupId>
          <artifactId>lwjgl-glfw</artifactId>
          <version>${lwjgl.version}</version>
          <classifier>natives-windows</classifier>
        </dependency>

        <dependency>
          <groupId>org.lwjgl</groupId>
          <artifactId>lwjgl-opengl</artifactId>
          <version>${lwjgl.version}</version>
          <classifier>natives-windows</classifier>
        </dependency>

      </dependencies>
    </profile>

    <profile>
      <id>linux</id>
      <activation>
        <os>
          <name>Linux</name>
        </os>
      </activation>
      <dependencies>

        <dependency>
          <groupId>org.lwjgl</groupId>
          <artifactId>lwjgl</artifactId>
          <version>${lwjgl.version}</version>
          <classifier>natives-linux</classifier>
        </dependency>

        <dependency>
          <groupId>org.lwjgl</groupId>
          <artifactId>lwjgl-glfw</artifactId>
          <version>${lwjgl.version}</version>
          <classifier>natives-linux</classifier>
        </dependency>

        <dependency>
          <groupId>org.lwjgl</groupId>
          <artifactId>lwjgl-opengl</artifactId>
          <version>${lwjgl.version}</version>
          <classifier>natives-linux</classifier>
        </dependency>

      </dependencies>
    </profile>

    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <dependencies>

        <dependency>
          <groupId>org.lwjgl</groupId>
          <artifactId>lwjgl</artifactId>
          <version>${lwjgl.version}</version>
          <classifier>natives-macos</classifier>
        </dependency>

        <dependency>
          <groupId>org.lwjgl</groupId>
          <artifactId>lwjgl-glfw</artifactId>
          <version>${lwjgl.version}</version>
          <classifier>natives-macos</classifier>
        </dependency>

        <dependency>
          <groupId>org.lwjgl</groupId>
          <artifactId>lwjgl-opengl</artifactId>
          <version>${lwjgl.version}</version>
          <classifier>natives-macos</classifier>
        </dependency>

      </dependencies>
    </profile>
  </profiles>

</project>
